name: zzz [DO NOT RUN] Automated unit tests

on:
  workflow_dispatch: # TODO: remove this after testing
  pull_request:
    branches: [trio_tests_ci_no_scheme_changes]
  push:
    branches: [trio_tests_ci_no_scheme_changes]

jobs:
  test:
    name: Run Unit Tests
    runs-on: macos-15
    #if: github.repository_owner == 'nightscout' TODO: include this if-statement after testing

    steps:
      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.3.app/Contents/Developer

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Build for testing
        run: |
          set -o pipefail && \
          time xcodebuild build-for-testing \
            -workspace Trio.xcworkspace \
            -scheme "Trio Tests" \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \

      - name: Run tests
        run: |
          set -o pipefail
          time xcodebuild test-without-building \
            -workspace Trio.xcworkspace \
            -scheme "Trio Tests" \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
          2>&1 | tee xcodebuild.log
        continue-on-error: true

      - name: Annotate test results
        if: always()
        run: |
          if [ -f xcodebuild.log ]; then
            summary_line=$(grep -E "Test run with [0-9]+ tests (failed|passed)" xcodebuild.log | head -n1)
      
            # Extract failing tests and format with newlines for annotation
            failed_tests=$(grep -A 20 "Failing tests:" xcodebuild.log | \
              grep -E '^\s+[A-Za-z0-9]+\..+\(\)' | \
              sed 's/^[ \t]*//' )
      
            # Join failed tests into a single string with `\n`
            failed_tests_inline=$(echo "$failed_tests" | sed ':a;N;$!ba;s/\n/\\n/g')
      
            if echo "$summary_line" | grep -q "failed"; then
              if [ -z "$failed_tests" ]; then
                echo "::error title=Unit Tests Failed::$summary_line"
              else
                echo "::error title=Unit Tests Failed::$summary_line\\n$failed_tests_inline"
              fi
      
              echo "## ❌ Some tests failed:" >> $GITHUB_STEP_SUMMARY
              echo "$failed_tests" | sed 's/^/  - /' >> $GITHUB_STEP_SUMMARY
      
              echo "::group::Failed Test List"
              echo "$failed_tests" | sed 's/^/  - /'
              echo "::endgroup::"
      
              exit 1  # 🔴 Explicitly fail the job if any tests failed
            else
              echo "::notice title=Unit Tests Passed::✅ All tests passed"
              echo "✅ All tests passed" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "::warning::Test log (xcodebuild.log) not found"
            exit 1
          fi